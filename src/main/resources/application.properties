# ===============================
# = DATABASE CONFIGURATION
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3306/QueueManagement
spring.datasource.username=my_user
spring.datasource.password=my_password

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.default_schema=QueueManagement
spring.jpa.properties.hibernate.schema_validation.ignore_views=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# ===============================
# = CONNECTION POOL (HikariCP)
# ===============================
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.pool-name=management-serviceHP
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.isolation-level=TRANSACTION_READ_COMMITTED
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000

# ===============================
# = SERVER CONFIGURATION
# ===============================
server.port=8443
server.ssl.bundle=demo

# ===============================
# = SSL/CERTIFICATES
# ===============================
spring.ssl.bundle.pem.demo.reload-on-update=true
spring.ssl.bundle.pem.demo.keystore.certificate=certs/demo.crt
spring.ssl.bundle.pem.demo.keystore.private-key=certs/demo.key

# ===============================
# = SWAGGER/API DOCUMENTATION
# ===============================
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha


# ===============================
# = SPRING CONFIGURATION
# ===============================
spring.threads.virtual.enabled=true
spring.profiles.active=local
api.version=0.0.1-SNAPSHOT

# ===============================
# = DOCKER COMPOSE
# ===============================
spring.docker.compose.file=compose.yaml
spring.docker.compose.enabled=true
spring.docker.compose.service=management-service
spring.docker.compose.lifecycle=start-only

# ===============================
# = LOGGING
# ===============================
logging.level.root=INFO
logging.file.name=application.log
logging.file.path=/tmp/log
logging.pattern.console=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS z} [%t] %c{1} : %msg%n
logging.pattern.file=[%-5level]  %d{yyyy-MM-dd HH:mm:ss.SSS z} [%t] %c{1} : %msg%n

# ===============================
# = COMMENTED OUT CONFIGURATIONS
# ===============================
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#server.port=8082

# ===============================
# = JMX CONFIGURATION
# ===============================
spring.jmx.enabled=true
com.sun.management.jmxremote=true
com.sun.management.jmxremote.port=50453
com.sun.management.jmxremote.rmi.port=50453
com.sun.management.jmxremote.local.only=true
com.sun.management.jmxremote.authenticate=false
com.sun.management.jmxremote.ssl=false
