# ===============================
# = DATABASE CONFIGURATION
# ===============================
#spring.datasource.url=jdbc:mysql://localhost:3306/QueueManagement?useSSL=false
spring.datasource.url=jdbc:mysql://mysql-14fcbcb9-deepakinmail-e5ba.i.aivencloud.com:11874/defaultdb?useSSL=true
spring.datasource.username=avnadmin
spring.datasource.password=${DB_PASSWORD}
# SSL Configuration for MySQL
spring.datasource.hikari.ssl-mode=VERIFY_IDENTITY
spring.datasource.hikari.ssl-cert=certs/ca.pem
spring.datasource.hikari.ssl-truststore=certs/ca.pem
spring.datasource.hikari.ssl-truststore-type=PEM

# ===============================
# = JPA / HIBERNATE
# ===============================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false
#spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.globally_quoted_identifiers=true
spring.jpa.properties.hibernate.default_schema=defaultdb
spring.jpa.properties.hibernate.schema_validation.ignore_views=true
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# ===============================
# = CONNECTION POOL (HikariCP)
# ===============================
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.pool-name=management-serviceHP
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.auto-commit=true
spring.datasource.hikari.transaction-isolation=TRANSACTION_READ_COMMITTED
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.validation-timeout=5000

# ===============================
# = SERVER CONFIGURATION
# ===============================
server.port=8080
#server.ssl.bundle=demo

# ===============================
# = SSL/CERTIFICATES
# ===============================
#spring.ssl.bundle.pem.demo.reload-on-update=true
#spring.ssl.bundle.pem.demo.keystore.certificate=certs/demo.crt
#spring.ssl.bundle.pem.demo.keystore.private-key=certs/demo.key

# ===============================
# = SWAGGER/API DOCUMENTATION
# ===============================
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.enabled=true
springdoc.swagger-ui.operationsSorter=alpha
springdoc.swagger-ui.tagsSorter=alpha
#springdoc.api-docs.version=OPENAPI_3_0

# ===============================
# = LOGGING FOR TOMCAT HTTP ERRORS
# ===============================
#logging.level.org.apache.coyote.http11=INFO
#logging.level.org.apache.catalina=DEBUG
#logging.level.org.apache.tomcat.util.net=INFO
logging.file.path=/app/logs

# ===============================
# = SPRING CONFIGURATION
# ===============================
spring.threads.virtual.enabled=true
spring.profiles.active=${SPRING_PROFILE}
spring.log-utils.global.httpMethod.enabled=true
spring.aop.proxy-target-class=false

# ===============================
# = DOCKER COMPOSE
# ===============================
spring.docker.compose.file=compose.yaml
spring.docker.compose.enabled=false
spring.docker.compose.service=management-service
spring.docker.compose.lifecycle-management=none

# ===============================
# = LOGGING
# ===============================
#logging.level.root=INFO
#logging.file.name=application.log
#logging.file.path=/tmp/log
#logging.pattern.console=[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS z} [%t] %c{1} : %msg%n
#logging.pattern.file=[%-5level]  %d{yyyy-MM-dd HH:mm:ss.SSS z} [%t] %c{1} : %msg%n

# ===============================
# = COMMENTED OUT CONFIGURATIONS
# ===============================
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.properties.javax.persistence.schema-generation.create-source=metadata
#spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
#spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=create.sql
#server.port=8082

# ===============================
# = JMX CONFIGURATION
# ===============================
spring.jmx.enabled=false
com.sun.management.jmxremote=false
com.sun.management.jmxremote.local.only=false
com.sun.management.jmxremote.authenticate=false
com.sun.management.jmxremote.ssl=false

# ===============================
# = OPTIMIZATION & MONITORING
# ===============================
# HikariCP metrics and health check
management.health.db.enabled=true
management.health.diskspace.enabled=true

# Graceful shutdown
server.shutdown=graceful
spring.lifecycle.timeout-per-shutdown-phase=30s

# Server timeouts
server.tomcat.max-threads=200
server.tomcat.accept-count=100

# Compression
server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text.xml,text/plain,application/javascript,text/css
server.compression.min-response-size=24
server.http2.enabled=true

# Actuator endpoints
management.endpoints.web.exposure.include=health,info
management.endpoint.health.probes.enabled=true

# ===============================
# = JWT CONFIGURATION
# ===============================
jwt.secret=mfQ3b0HVp6zrzyqP+1m+ZpF7Itd03p2r5ZOU5tPjVgmCL8nspBWyWqN4t4nx3DBQhct+GPtTznhMRl+GcUMWQg==
jwt.expiration-in-ms=3600000
